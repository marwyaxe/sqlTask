-- 1-Вивести статистику: загальна кількість всіх книг, їх вартість, їх середню вартість, мінімальну і максимальну ціну*/
SELECT
    COUNT(*) AS COUNT_,
    SUM(book_price) AS SUM_,
    AVG(book_price) AS AVG_,
    MIN(book_price) AS MIN_,
    MAX(book_price) AS MAX_
FROM
    `book`;
	
    -- 2-Вивести загальну кількість всіх книг без урахування книг з непроставленою ціною*/
SELECT
    COUNT(*)
FROM
    `book`
WHERE
    book_price IS NOT NULL;
	
    -- 3-Вивести статистику (див. 1) для книг новинка / не новинка*/
SELECT
    COUNT(*) AS COUNT_,
    SUM(book_price) AS SUM_,
    AVG(book_price) AS AVG_,
    MIN(book_price) AS MIN_,
    MAX(book_price) AS MAX_,
    book_new AS isNew
FROM
    `book`
GROUP BY
    book_new;
	
    -- 4-Вивести статистику (див. 1) для книг за кожним роком видання*/
SELECT
    COUNT(*) AS COUNT_,
    SUM(book_price) AS SUM_,
    AVG(book_price) AS AVG_,
    MIN(book_price) AS MIN_,
    MAX(book_price) AS MAX_,
    book_datee AS DATE_
FROM
    `book`
GROUP BY
    YEAR(book_datee);
	
    -- 5-Змінити п.4, виключивши з статистики книги з ціною від 10 до 20*/
SELECT
    COUNT(*) AS COUNT_,
    SUM(book_price) AS SUM_,
    AVG(book_price) AS AVG_,
    MIN(book_price) AS MIN_,
    MAX(book_price) AS MAX_,
    book_datee AS DATE_
FROM
    `book`
WHERE
    (book_price >= 10) AND(book_price <= 20)
GROUP BY
    YEAR(book_datee);
	
    -- 6-Змінити п.4. Відсортувати статистику по спадаючій кількості.*/
SELECT
    COUNT(*) AS COUNT_,
    SUM(book_price) AS SUM_,
    AVG(book_price) AS AVG_,
    MIN(book_price) AS MIN_,
    MAX(book_price) AS MAX_,
    book_datee AS DATE_
FROM
    `book`
GROUP BY
    YEAR(book_datee)
ORDER BY
    COUNT_
DESC;
	
    -- 7-Вивести загальну кількість кодів книг і кодів книг що не повторюються
SELECT
    COUNT(book_cod) AS COUNT_COD
FROM
    `book`;
	
    -- 8-Вивести статистику: загальна кількість і вартість книг по першій букві її назви*/
SELECT
    COUNT(*),
    COUNT(book_price),
    LEFT(book_name, 1) AS FIRSTLETTER
FROM
    `book`
GROUP BY
    FIRSTLETTER;
	
	-- 9.Змінити п. 8, виключивши з статистики назви що починаються з англ. букви або з цифри.
	
    -- 10-Змінити п. 9 так щоб до складу статистики потрапили дані з роками більшими за 2000.*/
SELECT
    COUNT(*),
    COUNT(book_price),
    LEFT(book_name, 1) AS FIRSTLETTER
FROM
    `book`
WHERE
    YEAR(book_datee) >= 2000
GROUP BY
    FIRSTLETTER;
	
    -- 11-Змінити п. 10. Відсортувати статистику по спадаючій перших букв назви.*/
SELECT
    COUNT(*),
    COUNT(book_price),
    LEFT(book_name, 1) AS FIRSTLETTER
FROM
    `book`
WHERE
    YEAR(book_datee) >= 2000
GROUP BY
    FIRSTLETTER
ORDER BY
    FIRSTLETTER
DESC;

    -- 12-Вивести статистику (див. 1) по кожному місяцю кожного року.*/
SELECT
    COUNT(*) AS COUNT_,
    SUM(book_price) AS SUM_,
    AVG(book_price) AS AVG_,
    MIN(book_price) AS MIN_,
    MAX(book_price) AS MAX_,
    MONTH(book_datee) AS MONTH_,
    YEAR(book_datee) AS YEAR_
FROM
    `book`
GROUP BY
    MONTH_;
	
    -- 13-Змінити п. 12 так щоб до складу статистики не увійшли дані з незаповненими датами.*/
SELECT
    COUNT(*) AS COUNT_,
    SUM(book_price) AS SUM_,
    AVG(book_price) AS AVG_,
    MIN(book_price) AS MIN_,
    MAX(book_price) AS MAX_,
    MONTH(book_datee) AS MONTH_,
    YEAR(book_datee) AS YEAR_
FROM
    `book`
WHERE
    book_datee IS NOT NULL
GROUP BY
    MONTH_;
	
    -- 14-Змінити п. 12. Фільтр по спадаючій року і зростанню місяця.*/
SELECT
    COUNT(*) AS COUNT_,
    SUM(book_price) AS SUM_,
    AVG(book_price) AS AVG_,
    MIN(book_price) AS MIN_,
    MAX(book_price) AS MAX_,
    MONTH(book_datee) AS MONTH_,
    YEAR(book_datee) AS YEAR_
FROM
    book
GROUP BY
    MONTH(book_datee),
    YEAR(book_datee)
ORDER BY
    MONTH(book_datee)
DESC
    ,
    YEAR(book_datee) ASC;
	
    -- 15-Вивести статистику для книг новинка / не новинка: загальна ціна, загальна ціна в грн. / Євро / руб. Колонкам запиту дати назви за змістом.*/
SELECT
    COUNT(*),
    SUM(book_price) AS SUM_,
    book_price * 27.87 AS UAH,
    book_price * 1.21 AS EUR,
    book_price * 74.26 AS RUB,
    book_new AS NEW
FROM
    `book`
GROUP BY NEW;
    -- 16-Змінити п. 15 так щоб виводилася округлена до цілого числа (дол. / Грн. / Євро / руб.) Ціна.*/
SELECT
    COUNT(*),
    SUM(book_price) AS SUM_,
    ROUND(book_price * 27.87, 0) AS UAH,
    ROUND(book_price * 1.21, 0) AS EUR,
    ROUND(book_price * 74.26, 0) AS RUB,
    book_new AS NEW
FROM
    `book`
GROUP BY NEW;

    -- 17-Вивести статистику (див. 1) по видавництвах.*/
SELECT
    COUNT(*) AS COUNT_,
    SUM(book_price) AS SUM_,
    AVG(book_price) AS AVG_,
    MIN(book_price) AS MIN_,
    MAX(book_price) AS MAX_,
    book_publisher AS PRODUCER
FROM
    `book`
GROUP BY
    PRODUCER;
	
	-- 18-Вивести статистику (див. 1) за темами і видавництвами. Фільтр по видавництвам.
SELECT
    COUNT(*) AS COUNT_,
    SUM(book_price) AS SUM_,
    AVG(book_price) AS AVG_,
    MIN(book_price) AS MIN_,
    MAX(book_price) AS MAX_,
    book_publisher,
    book_topic,
    book_category
FROM
    `book`
GROUP BY
    book_publisher,
    book_topic
ORDER BY
    book_publisher;
	
    -- 19-Вивести статистику (див. 1) за категоріями, темами і видавництвами. Фільтр по видавництвам, темах, категоріям.*/
SELECT
    COUNT(*) AS COUNT_,
    SUM(book_price) AS SUM_,
    AVG(book_price) AS AVG_,
    MIN(book_price) AS MIN_,
    MAX(book_price) AS MAX_,
    book_publisher,
    book_topic,
    book_category
FROM
    `book`
GROUP BY
    book_publisher,
    book_topic
ORDER BY
    book_publisher,
    book_topic,
    book_category;
	
    -- 20-Вивести список видавництв, у яких округлена до цілого ціна однієї сторінки більше 10 копійок. */
SELECT
    book_publisher
FROM
    `book`
WHERE
    ROUND(book_price / book_pages) > 0.10